{"version":3,"sources":["../node_modules/split-me/dist/esm/legacy/shadow-css-984bac74-549b16dd.js"],"names":["scopeCss","cssText","scopeId","commentOriginalSelector","ShadowCss","shimCssText","this","strictStyling","prototype","hostScopeId","slotScopeId","commentsWithHash","match","_commentWithHashRe","input","replace","_commentRe","stripComments","orgSelectors","processCommentedSelector_1","rule","placeholder","length","comment","selector","push","processRules","startsWith","content","scopedCssText","_scopeCssText","concat","join","forEach","_a","_insertPolyfillHostInCssText","_convertColonHost","_convertColonHostContext","_convertColonSlotted","_convertShadowDOMSelectors","_scopeSelectors","trim","_convertColonRule","_cssColonHostRe","_colonHostPartReplacer","slotAttr","regExp","_cssColonSlottedRe","m","_i","arguments","compound","suffix","sel","_polyfillHostNoCombinator","_cssColonHostContextRe","_colonHostContextPartReplacer","partReplacer","parts","split","r","i","p","host","part","indexOf","_polyfillHost","_shadowDOMSelectorsRe","reduce","result","pattern","scopeSelector","hostSelector","slotSelector","_this","_scopeSelector","CssRule","strict","map","shallowPart","_selectorNeedsScoping","_applyStrictSelectorScope","_applySelectorScope","_makeScopeMatcher","test","RegExp","_selectorReSuffix","_applySimpleSelectorScope","_polyfillHostRe","lastIndex","replaceBy_1","_polyfillHostNoCombinatorRe","_","before","colon","after","res","className","_scopeSelectorPart","scopedP","t","matches","safeContent","SafeSelector","scopedSelector","startIndex","sep","shouldScope","exec","separator","part_1","slice","index","substring","restore","_colonHostContextRe","_polyfillHostContext","_colonHostRe","_colonSlottedRe","_polyfillSlotted","placeholders","keep","replaceBy","_content","pseudo","exp","_parenSuffix","_ruleRe","_curlyRe","ruleCallback","inputWithEscapedBlocks","inputParts","resultParts","escapedBlocks","bracketCount","currentBlockParts","partIndex","StringWithEscapedBlocks","escapeBlocks","nextBlockIndex","escapedString","contentPrefix","blocks"],"mappings":"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","file":"static/js/10.a1db8002.chunk.js","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n *\n * This file is a port of shadowCSS from webcomponents.js to TypeScript.\n * https://github.com/webcomponents/webcomponentsjs/blob/4efecd7e0e/src/ShadowCSS/ShadowCSS.js\n * https://github.com/angular/angular/blob/master/packages/compiler/src/shadow_css.ts\n */\nfunction scopeCss(cssText, scopeId, commentOriginalSelector) {\n  var sc = new ShadowCss();\n  return sc.shimCssText(cssText, scopeId, scopeId + '-h', scopeId + '-s', commentOriginalSelector);\n}\n\nvar ShadowCss =\n/** @class */\nfunction () {\n  function ShadowCss() {\n    this.strictStyling = true;\n  }\n\n  ShadowCss.prototype.shimCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n    if (hostScopeId === void 0) {\n      hostScopeId = '';\n    }\n\n    if (slotScopeId === void 0) {\n      slotScopeId = '';\n    }\n\n    if (commentOriginalSelector === void 0) {\n      commentOriginalSelector = false;\n    }\n\n    var commentsWithHash = extractCommentsWithHash(cssText);\n    cssText = stripComments(cssText);\n    var orgSelectors = [];\n\n    if (commentOriginalSelector) {\n      var processCommentedSelector_1 = function processCommentedSelector_1(rule) {\n        var placeholder = \"/*!@___\" + orgSelectors.length + \"___*/\";\n        var comment = \"/*!@\" + rule.selector + \"*/\";\n        orgSelectors.push({\n          placeholder: placeholder,\n          comment: comment\n        });\n        rule.selector = placeholder + rule.selector;\n        return rule;\n      };\n\n      cssText = processRules(cssText, function (rule) {\n        if (rule.selector[0] !== '@') {\n          return processCommentedSelector_1(rule);\n        } else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n          rule.content = processRules(rule.content, processCommentedSelector_1);\n          return rule;\n        }\n\n        return rule;\n      });\n    }\n\n    var scopedCssText = this._scopeCssText(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector);\n\n    cssText = [scopedCssText].concat(commentsWithHash).join('\\n');\n\n    if (commentOriginalSelector) {\n      orgSelectors.forEach(function (_a) {\n        var placeholder = _a.placeholder,\n            comment = _a.comment;\n        cssText = cssText.replace(placeholder, comment);\n      });\n    }\n\n    return cssText;\n  };\n\n  ShadowCss.prototype._scopeCssText = function (cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector) {\n    // replace :host and :host-context -shadowcsshost and -shadowcsshost respectively\n    cssText = this._insertPolyfillHostInCssText(cssText);\n    cssText = this._convertColonHost(cssText);\n    cssText = this._convertColonHostContext(cssText);\n    cssText = this._convertColonSlotted(cssText, slotScopeId);\n    cssText = this._convertShadowDOMSelectors(cssText);\n\n    if (scopeId) {\n      cssText = this._scopeSelectors(cssText, scopeId, hostScopeId, slotScopeId, commentOriginalSelector);\n    }\n\n    cssText = cssText.replace(/-shadowcsshost-no-combinator/g, \".\" + hostScopeId);\n    cssText = cssText.replace(/>\\s*\\*\\s+([^{, ]+)/gm, ' $1 ');\n    return cssText.trim();\n  };\n  /*\n   * convert a rule like :host(.foo) > .bar { }\n   *\n   * to\n   *\n   * .foo<scopeName> > .bar\n  */\n\n\n  ShadowCss.prototype._convertColonHost = function (cssText) {\n    return this._convertColonRule(cssText, _cssColonHostRe, this._colonHostPartReplacer);\n  };\n  /*\n  * convert a rule like ::slotted(.foo) { }\n  */\n\n\n  ShadowCss.prototype._convertColonSlotted = function (cssText, slotAttr) {\n    var regExp = _cssColonSlottedRe;\n    return cssText.replace(regExp, function () {\n      var m = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        m[_i] = arguments[_i];\n      }\n\n      if (m[2]) {\n        var compound = m[2].trim();\n        var suffix = m[3];\n        var sel = '.' + slotAttr + ' > ' + compound + suffix;\n        return sel;\n      } else {\n        return _polyfillHostNoCombinator + m[3];\n      }\n    });\n  };\n  /*\n   * convert a rule like :host-context(.foo) > .bar { }\n   *\n   * to\n   *\n   * .foo<scopeName> > .bar, .foo scopeName > .bar { }\n   *\n   * and\n   *\n   * :host-context(.foo:host) .bar { ... }\n   *\n   * to\n   *\n   * .foo<scopeName> .bar { ... }\n  */\n\n\n  ShadowCss.prototype._convertColonHostContext = function (cssText) {\n    return this._convertColonRule(cssText, _cssColonHostContextRe, this._colonHostContextPartReplacer);\n  };\n\n  ShadowCss.prototype._convertColonRule = function (cssText, regExp, partReplacer) {\n    // m[1] = :host(-context), m[2] = contents of (), m[3] rest of rule\n    return cssText.replace(regExp, function () {\n      var m = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        m[_i] = arguments[_i];\n      }\n\n      if (m[2]) {\n        var parts = m[2].split(',');\n        var r = [];\n\n        for (var i = 0; i < parts.length; i++) {\n          var p = parts[i].trim();\n          if (!p) break;\n          r.push(partReplacer(_polyfillHostNoCombinator, p, m[3]));\n        }\n\n        return r.join(',');\n      } else {\n        return _polyfillHostNoCombinator + m[3];\n      }\n    });\n  };\n\n  ShadowCss.prototype._colonHostContextPartReplacer = function (host, part, suffix) {\n    if (part.indexOf(_polyfillHost) > -1) {\n      return this._colonHostPartReplacer(host, part, suffix);\n    } else {\n      return host + part + suffix + ', ' + part + ' ' + host + suffix;\n    }\n  };\n\n  ShadowCss.prototype._colonHostPartReplacer = function (host, part, suffix) {\n    return host + part.replace(_polyfillHost, '') + suffix;\n  };\n  /*\n   * Convert combinators like ::shadow and pseudo-elements like ::content\n   * by replacing with space.\n  */\n\n\n  ShadowCss.prototype._convertShadowDOMSelectors = function (cssText) {\n    return _shadowDOMSelectorsRe.reduce(function (result, pattern) {\n      return result.replace(pattern, ' ');\n    }, cssText);\n  }; // change a selector like 'div' to 'name div'\n\n\n  ShadowCss.prototype._scopeSelectors = function (cssText, scopeSelector, hostSelector, slotSelector, commentOriginalSelector) {\n    var _this = this;\n\n    return processRules(cssText, function (rule) {\n      var selector = rule.selector;\n      var content = rule.content;\n\n      if (rule.selector[0] !== '@') {\n        selector = _this._scopeSelector(rule.selector, scopeSelector, hostSelector, slotSelector, _this.strictStyling);\n      } else if (rule.selector.startsWith('@media') || rule.selector.startsWith('@supports') || rule.selector.startsWith('@page') || rule.selector.startsWith('@document')) {\n        content = _this._scopeSelectors(rule.content, scopeSelector, hostSelector, slotSelector, commentOriginalSelector);\n      }\n\n      selector = selector.replace(/\\s{2,}/g, ' ').trim();\n      return new CssRule(selector, content);\n    });\n  };\n\n  ShadowCss.prototype._scopeSelector = function (selector, scopeSelector, hostSelector, slotSelector, strict) {\n    var _this = this;\n\n    return selector.split(',').map(function (shallowPart) {\n      if (slotSelector && shallowPart.indexOf('.' + slotSelector) > -1) {\n        return shallowPart.trim();\n      }\n\n      if (_this._selectorNeedsScoping(shallowPart, scopeSelector)) {\n        return strict ? _this._applyStrictSelectorScope(shallowPart, scopeSelector, hostSelector).trim() : _this._applySelectorScope(shallowPart, scopeSelector, hostSelector).trim();\n      } else {\n        return shallowPart.trim();\n      }\n    }).join(', ');\n  };\n\n  ShadowCss.prototype._selectorNeedsScoping = function (selector, scopeSelector) {\n    var re = this._makeScopeMatcher(scopeSelector);\n\n    return !re.test(selector);\n  };\n\n  ShadowCss.prototype._makeScopeMatcher = function (scopeSelector) {\n    var lre = /\\[/g;\n    var rre = /\\]/g;\n    scopeSelector = scopeSelector.replace(lre, '\\\\[').replace(rre, '\\\\]');\n    return new RegExp('^(' + scopeSelector + ')' + _selectorReSuffix, 'm');\n  };\n\n  ShadowCss.prototype._applySelectorScope = function (selector, scopeSelector, hostSelector) {\n    // Difference from webcomponents.js: scopeSelector could not be an array\n    return this._applySimpleSelectorScope(selector, scopeSelector, hostSelector);\n  }; // scope via name and [is=name]\n\n\n  ShadowCss.prototype._applySimpleSelectorScope = function (selector, scopeSelector, hostSelector) {\n    // In Android browser, the lastIndex is not reset when the regex is used in String.replace()\n    _polyfillHostRe.lastIndex = 0;\n\n    if (_polyfillHostRe.test(selector)) {\n      var replaceBy_1 = this.strictStyling ? \".\" + hostSelector : scopeSelector;\n      return selector.replace(_polyfillHostNoCombinatorRe, function (_, selector) {\n        return selector.replace(/([^:]*)(:*)(.*)/, function (_, before, colon, after) {\n          return before + replaceBy_1 + colon + after;\n        });\n      }).replace(_polyfillHostRe, replaceBy_1 + ' ');\n    }\n\n    return scopeSelector + ' ' + selector;\n  };\n\n  ShadowCss.prototype._applyStrictSelectorScope = function (selector, scopeSelector, hostSelector) {\n    var _this = this;\n\n    var isRe = /\\[is=([^\\]]*)\\]/g;\n    scopeSelector = scopeSelector.replace(isRe, function (_) {\n      var parts = [];\n\n      for (var _i = 1; _i < arguments.length; _i++) {\n        parts[_i - 1] = arguments[_i];\n      }\n\n      return parts[0];\n    });\n    var className = '.' + scopeSelector;\n\n    var _scopeSelectorPart = function _scopeSelectorPart(p) {\n      var scopedP = p.trim();\n\n      if (!scopedP) {\n        return '';\n      }\n\n      if (p.indexOf(_polyfillHostNoCombinator) > -1) {\n        scopedP = _this._applySimpleSelectorScope(p, scopeSelector, hostSelector);\n      } else {\n        // remove :host since it should be unnecessary\n        var t = p.replace(_polyfillHostRe, '');\n\n        if (t.length > 0) {\n          var matches = t.match(/([^:]*)(:*)(.*)/);\n\n          if (matches) {\n            scopedP = matches[1] + className + matches[2] + matches[3];\n          }\n        }\n      }\n\n      return scopedP;\n    };\n\n    var safeContent = new SafeSelector(selector);\n    selector = safeContent.content();\n    var scopedSelector = '';\n    var startIndex = 0;\n    var res;\n    var sep = /( |>|\\+|~(?!=))\\s*/g; // If a selector appears before :host it should not be shimmed as it\n    // matches on ancestor elements and not on elements in the host's shadow\n    // `:host-context(div)` is transformed to\n    // `-shadowcsshost-no-combinatordiv, div -shadowcsshost-no-combinator`\n    // the `div` is not part of the component in the 2nd selectors and should not be scoped.\n    // Historically `component-tag:host` was matching the component so we also want to preserve\n    // this behavior to avoid breaking legacy apps (it should not match).\n    // The behavior should be:\n    // - `tag:host` -> `tag[h]` (this is to avoid breaking legacy apps, should not match anything)\n    // - `tag :host` -> `tag [h]` (`tag` is not scoped because it's considered part of a\n    //   `:host-context(tag)`)\n\n    var hasHost = selector.indexOf(_polyfillHostNoCombinator) > -1; // Only scope parts after the first `-shadowcsshost-no-combinator` when it is present\n\n    var shouldScope = !hasHost;\n\n    while ((res = sep.exec(selector)) !== null) {\n      var separator = res[1];\n      var part_1 = selector.slice(startIndex, res.index).trim();\n      shouldScope = shouldScope || part_1.indexOf(_polyfillHostNoCombinator) > -1;\n      var scopedPart = shouldScope ? _scopeSelectorPart(part_1) : part_1;\n      scopedSelector += scopedPart + \" \" + separator + \" \";\n      startIndex = sep.lastIndex;\n    }\n\n    var part = selector.substring(startIndex);\n    shouldScope = shouldScope || part.indexOf(_polyfillHostNoCombinator) > -1;\n    scopedSelector += shouldScope ? _scopeSelectorPart(part) : part; // replace the placeholders with their original values\n\n    return safeContent.restore(scopedSelector);\n  };\n\n  ShadowCss.prototype._insertPolyfillHostInCssText = function (selector) {\n    selector = selector.replace(_colonHostContextRe, _polyfillHostContext).replace(_colonHostRe, _polyfillHost).replace(_colonSlottedRe, _polyfillSlotted);\n    return selector;\n  };\n\n  return ShadowCss;\n}();\n\nvar SafeSelector =\n/** @class */\nfunction () {\n  function SafeSelector(selector) {\n    var _this = this;\n\n    this.placeholders = [];\n    this.index = 0; // Replaces attribute selectors with placeholders.\n    // The WS in [attr=\"va lue\"] would otherwise be interpreted as a selector separator.\n\n    selector = selector.replace(/(\\[[^\\]]*\\])/g, function (_, keep) {\n      var replaceBy = \"__ph-\" + _this.index + \"__\";\n\n      _this.placeholders.push(keep);\n\n      _this.index++;\n      return replaceBy;\n    }); // Replaces the expression in `:nth-child(2n + 1)` with a placeholder.\n    // WS and \"+\" would otherwise be interpreted as selector separators.\n\n    this._content = selector.replace(/(:nth-[-\\w]+)(\\([^)]+\\))/g, function (_, pseudo, exp) {\n      var replaceBy = \"__ph-\" + _this.index + \"__\";\n\n      _this.placeholders.push(exp);\n\n      _this.index++;\n      return pseudo + replaceBy;\n    });\n  }\n\n  SafeSelector.prototype.restore = function (content) {\n    var _this = this;\n\n    return content.replace(/__ph-(\\d+)__/g, function (_, index) {\n      return _this.placeholders[+index];\n    });\n  };\n\n  SafeSelector.prototype.content = function () {\n    return this._content;\n  };\n\n  return SafeSelector;\n}();\n\nvar _polyfillHost = '-shadowcsshost';\nvar _polyfillSlotted = '-shadowcssslotted'; // note: :host-context pre-processed to -shadowcsshostcontext.\n\nvar _polyfillHostContext = '-shadowcsscontext';\n\nvar _parenSuffix = ')(?:\\\\((' + '(?:\\\\([^)(]*\\\\)|[^)(]*)+?' + ')\\\\))?([^,{]*)';\n\nvar _cssColonHostRe = new RegExp('(' + _polyfillHost + _parenSuffix, 'gim');\n\nvar _cssColonHostContextRe = new RegExp('(' + _polyfillHostContext + _parenSuffix, 'gim');\n\nvar _cssColonSlottedRe = new RegExp('(' + _polyfillSlotted + _parenSuffix, 'gim');\n\nvar _polyfillHostNoCombinator = _polyfillHost + '-no-combinator';\n\nvar _polyfillHostNoCombinatorRe = /-shadowcsshost-no-combinator([^\\s]*)/;\nvar _shadowDOMSelectorsRe = [/::shadow/g, /::content/g];\nvar _selectorReSuffix = '([>\\\\s~+\\[.,{:][\\\\s\\\\S]*)?$';\nvar _polyfillHostRe = /-shadowcsshost/gim;\nvar _colonHostRe = /:host/gim;\nvar _colonSlottedRe = /::slotted/gim;\nvar _colonHostContextRe = /:host-context/gim;\nvar _commentRe = /\\/\\*\\s*[\\s\\S]*?\\*\\//g;\n\nfunction stripComments(input) {\n  return input.replace(_commentRe, '');\n}\n\nvar _commentWithHashRe = /\\/\\*\\s*#\\s*source(Mapping)?URL=[\\s\\S]+?\\*\\//g;\n\nfunction extractCommentsWithHash(input) {\n  return input.match(_commentWithHashRe) || [];\n}\n\nvar _ruleRe = /(\\s*)([^;\\{\\}]+?)(\\s*)((?:{%BLOCK%}?\\s*;?)|(?:\\s*;))/g;\nvar _curlyRe = /([{}])/g;\nvar OPEN_CURLY = '{';\nvar CLOSE_CURLY = '}';\nvar BLOCK_PLACEHOLDER = '%BLOCK%';\n\nvar CssRule =\n/** @class */\nfunction () {\n  function CssRule(selector, content) {\n    this.selector = selector;\n    this.content = content;\n  }\n\n  return CssRule;\n}();\n\nfunction processRules(input, ruleCallback) {\n  var inputWithEscapedBlocks = escapeBlocks(input);\n  var nextBlockIndex = 0;\n  return inputWithEscapedBlocks.escapedString.replace(_ruleRe, function () {\n    var m = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      m[_i] = arguments[_i];\n    }\n\n    var selector = m[2];\n    var content = '';\n    var suffix = m[4];\n    var contentPrefix = '';\n\n    if (suffix && suffix.startsWith('{' + BLOCK_PLACEHOLDER)) {\n      content = inputWithEscapedBlocks.blocks[nextBlockIndex++];\n      suffix = suffix.substring(BLOCK_PLACEHOLDER.length + 1);\n      contentPrefix = '{';\n    }\n\n    var rule = ruleCallback(new CssRule(selector, content));\n    return \"\" + m[1] + rule.selector + m[3] + contentPrefix + rule.content + suffix;\n  });\n}\n\nvar StringWithEscapedBlocks =\n/** @class */\nfunction () {\n  function StringWithEscapedBlocks(escapedString, blocks) {\n    this.escapedString = escapedString;\n    this.blocks = blocks;\n  }\n\n  return StringWithEscapedBlocks;\n}();\n\nfunction escapeBlocks(input) {\n  var inputParts = input.split(_curlyRe);\n  var resultParts = [];\n  var escapedBlocks = [];\n  var bracketCount = 0;\n  var currentBlockParts = [];\n\n  for (var partIndex = 0; partIndex < inputParts.length; partIndex++) {\n    var part = inputParts[partIndex];\n\n    if (part === CLOSE_CURLY) {\n      bracketCount--;\n    }\n\n    if (bracketCount > 0) {\n      currentBlockParts.push(part);\n    } else {\n      if (currentBlockParts.length > 0) {\n        escapedBlocks.push(currentBlockParts.join(''));\n        resultParts.push(BLOCK_PLACEHOLDER);\n        currentBlockParts = [];\n      }\n\n      resultParts.push(part);\n    }\n\n    if (part === OPEN_CURLY) {\n      bracketCount++;\n    }\n  }\n\n  if (currentBlockParts.length > 0) {\n    escapedBlocks.push(currentBlockParts.join(''));\n    resultParts.push(BLOCK_PLACEHOLDER);\n  }\n\n  return new StringWithEscapedBlocks(resultParts.join(''), escapedBlocks);\n}\n\nexport { ShadowCss, scopeCss };"],"sourceRoot":""}